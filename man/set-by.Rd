% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/set_by.R
\name{set-by}
\alias{set-by}
\title{How to set cell properties variably by cell contents}
\value{
The modified huxtable.
}
\description{
This help page explains how to set properties differently for cells, depending on their contents.
}
\details{
For example, in a table of p-values, you could bold cells where p < 0.05:\preformatted{set_bold_by(pval_hux, by_range(0.05, c(TRUE, FALSE)))
}

Or you can use red text for a particular value:\preformatted{hxtbl \%>\% set_text_color_by(by_value("Warning" = "red"))
}

There is a \code{set_xxx_by} function for each huxtable cell property. The syntax is:\preformatted{set_xxx_by(ht, row, col, fn)
}

Here, \code{row} and \code{col} specify ranges of rows and columns. See \link{rowspecs} for details.

To set properties for the whole table, you can omit \code{row} and \code{col}:\preformatted{set_xxx_by(ht, fn)
}

Use the \code{fn} argument to set property values in different ways.
\itemize{
\item To set a property value for cells with a specific value, use \code{\link[=by_value]{by_value()}}.
\item To set a property value for cells within a numeric range, use \code{\link[=by_range]{by_range()}}.
\item To set a property value for cells by quantiles, use \code{\link[=by_quantile]{by_quantile()}} or \code{\link[=by_equal_groups]{by_equal_groups()}}.
\item To set a property value for cells that match a string or regular expression, use \code{\link[=by_matching]{by_matching()}}.
}
}
\section{Technical details}{


The \code{fn} argument to \code{set_xxx_by} must be a function that takes four arguments: the
original huxtable \code{ht}, a numeric vector of \code{rows}, a numeric vector of \code{cols}, and the \code{current}
property values for \code{ht[rows, cols]}, as a matrix. It should return the new property values for
\code{ht[rows, cols]}, as a matrix. Run e.g.
\code{by_value(1:3, letters[1:3])} to see an example.
}

\examples{
ht <- hux(c("OK", "Warning", "Error"))
ht <- set_text_color_by(ht, by_value(OK = "green", Warning = "orange", Error = "red"))
ht

ht <- hux(rnorm(5), rnorm(5), rnorm(5))
set_background_color_by(ht, by_range(c(-1, 1), c("blue", "yellow", "red")))
set_background_color_by(ht, by_equal_groups(2, c("red", "green")))

ht <- hux(Coef = c(3.5, 2.4, 1.3), Pval = c(0.04, 0.01, 0.07), add_colnames = TRUE)
set_bold_by(ht, everywhere, "Pval", by_range(0.05, c(TRUE, FALSE)))
}
