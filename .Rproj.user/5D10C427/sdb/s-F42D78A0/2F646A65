{
    "collab_server" : "",
    "contents" : "\n#' Create HTML Representing a Huxtable\n#'\n#' @param ht A huxtable.\n#' @param ...\n#'\n#' @return \\code{to_html} returns an HTML string. \\code{print_html} prints the string and returns \\code{NULL}.\n#' @export\n#'\n#' @examples\n#' ht <- hux(a = 1:3, b = letters[1:3])\n#' to_html(ht)\nto_html <- function (ht, ...) UseMethod('to_html')\n\nto_html.huxtable <- function(ht, ...) {\n  width <- width(ht)\n  if (is.numeric(width)) width <- paste0(width * 100, '%')\n  res <- paste0('<table class=\"huxtable\" style=\"width: ', width, ';\">\\n')\n  cols_html <- sapply(1:ncol(ht), col_html, ht = ht)\n  cols_html <- paste0(cols_html, collapse = '')\n  res <- paste0(res, cols_html)\n  rows_html <- sapply(1:nrow(ht), row_html, ht = ht)\n  rows_html <- paste0(rows_html, collapse = '')\n  res <- paste0(res, rows_html)\n  res <- paste0(res, '</table>\\n')\n  res\n}\n\n#' @export\n#'\n#' @rdname to_html\nprint_html <- function(ht, ...) {\n  cat(to_html(ht, ...))\n}\n\ncol_html <- function (ht, cn) {\n  col_width <- col_widths(ht)[cn]\n  res <- paste0('<col style=\"width: ', col_width ,';\">')\n  # print out <col>, <colgroup>, that kinda stuff\n  res\n}\n\nrow_html <- function (ht, rn) {\n  # print out <tr>, <td> or maybe <th> etc., then </tr>\n  res <- '<tr class=\"huxtable-row\">\\n'\n  cells_html <- sapply(1:ncol(ht), cell_html, ht = ht, rn = rn)\n  cells_html <- paste0(cells_html, collapse = '')\n  res <- paste0(res, cells_html)\n  res <- paste0(res, '</tr>\\n')\n  res\n}\n\ncell_html <- function (ht, rn, cn) {\n  # check if cell is shadowed by an earlier row/colspan.\n  # we could reduce repetition a lot by doing this calculation once per call!\n  if (cell_shadowed(ht, rn, cn, 'row')) return('')\n  if (cell_shadowed(ht, rn, cn, 'col')) return('')\n  res <- '  <td class=\"huxtable-cell\"'\n  rs <- rowspan(ht)[rn,cn]\n  cs <- colspan(ht)[rn,cn]\n  if (isTRUE(rs > 1)) res <- paste0(res, ' rowspan=\"', rs ,'\"')\n  if (isTRUE(cs > 1)) res <- paste0(res, ' colspan=\"', rs ,'\"')\n  res<- paste0(res, ' style=\"')\n  val <- valign(ht)[rn, cn]\n  res <- paste0(res, 'vertical-align: ', val, '; ')\n  al  <- align(ht)[rn, cn]\n  res <- paste0(res, 'text-align: ', al, '; ')\n  if (! is.na(bgcolor <- bgcolor(ht)[rn, cn])) {\n    bgcolor <- as.vector(col2rgb(bgcolor))\n    bgcolor <- paste(bgcolor, collapse = ', ')\n    res <- paste0(res, 'background-color: rgb(', bgcolor, '); ')\n  }\n  res <- paste0(res, '\">')\n  res <- paste0(res, ht[rn, cn]) # eventually should be formatted!\n  res <- paste0(res, '</td>\\n')\n  res\n}\n\n\n",
    "created" : 1487614043177.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2273730825",
    "id" : "2F646A65",
    "lastKnownWriteTime" : 1487873793,
    "last_content_update" : 1487873793939,
    "path" : "~/huxtable/R/HTML.R",
    "project_path" : "R/HTML.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}